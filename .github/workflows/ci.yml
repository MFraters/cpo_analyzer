name: Continous integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: stable
          - os: ubuntu-18.04
            target: x86_64-unknown-linux-gnu
            toolchain: stable
          - os: macos-latest
            target: x86_64-apple-darwin
            toolchain: stable
            # TODO: also aarch64 / M1
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            toolchain: stable
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            toolchain: beta
            # Test both windows-gnu and windows-msvc; use beta rust on one

    steps:
    - uses: actions/checkout@v2
    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        target: ${{ matrix.target }}
        toolchain: ${{ matrix.toolchain }}
        override: true
    - run: ${{ matrix.deps }}
    - name: Cache cargo plugins
      uses: actions/cache@v1
      with:
        path: ~/.cargo/bin/
        key: ${{ runner.os }}-cargo-plugins
    - name: Install fmt
      run: rustup component add rustfmt
    - name: Check fmt
      run: cargo fmt -- --check
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: run examples
      run: cargo run tests/test_example_1.toml
    - if: startsWith(matrix.os, 'ubuntu') 
      name: Test examples
      run: | 
           compare -metric AE examples/example_experiment_1/CPO_figures/weighted_LPO_elastic_oli_ens_A-B-C-Axis_Batlow_g1_sp301_t00001.00000.png examples/example_experiment_1/test_results/weighted_LPO_elastic_oli_ens_A-B-C-Axis_Batlow_g1_sp301_t00001.00000.png null 
    - name: Run doc
      run: cargo doc --verbose
